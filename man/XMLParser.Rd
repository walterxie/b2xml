% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/XMLParser.R
\name{XMLParser}
\alias{XMLParser}
\alias{getTags}
\alias{filterByAtrr}
\alias{getSeqsDF}
\alias{getSeqs}
\alias{getTaxa}
\alias{getParameters}
\alias{getParamByID}
\alias{getSpec}
\alias{getFilteredAlignment}
\title{parse BEAST 2 XML}
\usage{
getTags(xml, xpath = "", ...)

filterByAtrr(nodeset, attr = "id", value = "mcmc")

getSeqsDF(xml, xpath = "//sequence")

getSeqs(xml)

getTaxa(seqs, attr = "taxon")

getParameters(xml)

getParamByID(xml, xpath = "//parameter|//stateNode", id = "")

getSpec(xml, xpath = "", spec = "")

getFilteredAlignment(xml)
}
\arguments{
\item{xml}{xml object from \code{\link{read_xml}}.}

\item{xpath}{A string containing a xpath (1.0) expression.}

\item{...}{Other arguments passed to \code{\link{xml_find_all}}.}

\item{nodeset}{the result from getters using \code{\link{xml_find_all}}.}

\item{attr}{xml object attribute.}

\item{value}{the value of the xml object attribute.}

\item{seqs}{the result from \code{getSeqs}.}

\item{spec}{The class is specified in BEAST XML.}
}
\description{
The functions to parse BEAST 2 XML using \code{\link{xml2}}.
The getter will return \code{nodeset} defined in \code{\link{xml2}}.
}
\details{
\code{getTags} is a generic function to get all node sets under xpath.

\code{filterByAtrr} is a generic function to filter a node set by attributes.
return original input, if the attribute is not defined in the XML.

\code{getSeqsDF} converts BEAST XML \code{<sequence>} into a \code{\link{tibble}}.

\code{getSeqs} gets all \code{<sequence>}.

\code{getTaxa} pulls out the taxa name, and is used aftrer \code{getSeqs}.

\code{getParameters} gets all <parameter> including <stateNode>.

\code{getParamByID} is replaced by \code{getTagByID}.

\code{getSpec} get all node sets containing spec="???".

\code{getFilteredAlignment} gets all \code{spec="FilteredAlignment"}
from <data> and <alignment>.
}
\examples{
getTags(xml , xpath="//data|//alignment")

param <- getTags(xml, "//parameter")
param \%>\% filterByAtrr(param, attr="id", value="strict.clock")

require(xml2)
xml <- read_xml(file.path("beast2.xml"))
seqs.df <- getSeqsDF(xml)

seqs <- getSeqs(xml)
taxa.names <- getTaxa(seqs)

getSpec(xml , xpath="//data|//alignment", spec="FilteredAlignment")
getFilteredAlignment(xml)

}
\keyword{xml}
